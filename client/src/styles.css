/* You can add global styles to this file, and also import other style files */
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
    --primary-color: #f7730f !important;
    --secondary-color: #e95302 !important;
    --dark-color: #121212;
    --dark-color2: #1F2937;
}

html {
    overflow-x: hidden;
    box-sizing: content-box;
    font-family: 'Poppins', sans-serif;
}

table {
    width: 100%;
}

table.fc-col-header {
    width: 100% !important;
}

div.fc-view-harness.fc-view-harness-active {
    height: 300px !important;
}

::-webkit-scrollbar {
    width: 3px;
    height: 3px;
    background-color: transparent !important;
}

::-webkit-scrollbar-track {
    background-color: rgba(179, 179, 179, 0.692);
    border-radius: 1rem;
    margin: 0.4rem;
    margin-top: 0.4rem;
    border-left: 1px solid rgba(211, 211, 211, 0);
}

::-webkit-scrollbar-thumb {
    border-radius: 20px;
    background: linear-gradient(30deg, #F69F8A, #335B7F);
    box-shadow: inset 0 0 6px #A66684,
}

@font-face {
    font-family: 'KGSketch';
    src: url(./assets/fonts/KGSecondChancesSketch.ttf);
}

@font-face {
    font-family: 'KGSolid';
    src: url(./assets/fonts/KGSecondChancesSolid.ttf);
}

@font-face {
    font-family: 'Greek';
    src: url(./assets/fonts/Greek.ttf);
}

@font-face {
    font-family: 'Cubics';
    src: url(./assets/fonts/cubic.ttf);
}

svg {

    min-height: 100vh;
    visibility: hidden;

}

.symbol {
    font-family: 'Greek';
    color: var(--primary-color);
    font-size: 3.5rem;
}

.logo {
    font-weight: normal;
    font-family: 'Cubics', cursive;
    font-size: 2.5rem;
}

.logo2 {
    font-weight: normal;
    font-family: 'Cubics', cursive;
    font-size: 2rem;
}

.important {
    color: var(--primary-color);
    opacity: 100%;
}

.lessimportant {
    color: var(--secondary-color);
    opacity: 100%;
}

.title {
    color: var(--primary-color);
}

.border-color {
    border: 1px solid var(--primary-color);
}

.header {
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
}

ul li a p:hover {
    background: linear-gradient(to top,
            var(--primary-color),
            transparent) !important;
    border-bottom: 1px solid var(--primary-color) !important;
}

.content {
    color: white;
}

.content2 {
    background-color: var(--dark-color2);
    border-color: var(--primary-color);
    position: relative;
    z-index: 1;
}

.subcontent {
    background-color: var(--secondary-color);
    color: white;
    border: 1px white solid;
}

.subcontent2 {
    background-color: white;
    color: black;
}

.headbutton {
    border: 1px solid white;
    color: white;
    opacity: 92%;
}

button:hover {
    background: linear-gradient(var(--primary-color),
            var(--secondary-color));
    color: white;
    opacity: 92%;
}

.fc h2 {
    color: var(--primary-color);
    font-size: 1.3rem !important;
}

.fc-prev-button {
    background-color: var(--primary-color) !important;
}

.fc-next-button {
    background-color: var(--secondary-color) !important;
}

.fc-today-button {
    background-color: var(--primary-color) !important;
}

.fc-button-active {
    background-color: var(--primary-color) !important;
}

.fc-listWeek-button {
    background-color: var(--secondary-color) !important;
}

.fc-button {
    border: 1px solid white !important;
}

#myVideo {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
}

@media screen and (max-aspect-ratio: 16/9) {
    .bg-video {
        height: 100vw;
        top: 50%;
        transform: translateY(-50%);
    }
}

@media screen and (min-aspect-ratio: 16/9) {
    .bg-video {
        width: 100vh;
        left: 50%;
        transform: translateX(-50%);
    }
}

.animacion {
    animation: aparecer 1s forwards;
    /* Define el tiempo de duración y dirección de la animación */
    opacity: 0;
    /* Define la opacidad inicial del elemento */
}

@keyframes aparecer {
    from {
        opacity: 0;
        /* Define la opacidad inicial de la animación */
        transform: translateY(-20px);
        /* Define la posición inicial de la animación */
    }

    to {
        opacity: 1;
        /* Define la opacidad final de la animación */
        transform: translateY(0);
        /* Define la posición final de la animación */
    }
}